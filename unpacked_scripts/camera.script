local flow = require "flow.flow"
local wait = flow
local monarch = require "monarch.monarch"
local global = require "global"

local function session()
	local time = global.oxygen * 7.5 + 7.5
	local speed = global.velocity * 32
	local depth = time * speed
	local begin_position = vmath.vector3(0, 0, 0)
	local end_position = vmath.vector3(0, - depth, 0)

	particlefx.play "default:/camera#foreground"

	msg.post("loader:/music#underwater", "play_sound")
	msg.post("loader:/music#down", "play_sound")
	msg.post("#camera", "acquire_camera_focus")

	msg.post("manager#oxy", "set_timer", { time = time })

	wait.go_animate(".","position", go.PLAYBACK_ONCE_FORWARD, end_position, go.EASING_OUTSINE, time)

	msg.post("#", "notify")
	
	msg.post("loader:/music#down", "stop_sound")
	msg.post("loader:/music#up", "play_sound")

	msg.post("loader:/music#up", "stop_sound")
	msg.post("loader:/music#underwater", "stop_sound")
	monarch.back()
end

function init(self)
	msg.post("#camera", "acquire_camera_focus")
	self.table = {}
end

function update(self)
	local pos = go.get_position "player"
	pos.y = math.min(0, pos.y - 427)
	pos.x = pos.x - 240
	go.set_position(pos)
end

function on_message(self, message_id, message, sender)
	if message_id == hash "track_reach" then
		table.insert(self.table, sender)
	elseif message_id == hash "notify" then
		for k, v in pairs(self.table) do
			msg.post(v, "bottom_reached")
		end
	end
	flow.on_message(message_id, message, sender)
end
